# ======
# colors
# ======
set-window-option -g status-style bg=default
set-window-option -g status-style fg=white

set-window-option -g mode-style bg=white
set-window-option -g mode-style fg=black

set-window-option -g window-status-style fg=#909090,bg=default
set-window-option -g window-status-format "#W "

set-window-option -g window-status-current-style fg=#e0e0e0,bg=default
set-window-option -g window-status-current-format "#W "

set-option -g pane-border-style fg=#202020,bg=default
set-option -g pane-active-border-style fg=#242424,bg=default

set -g status-left-length  180
set -g status-right-length 180

# status
set -g status-interval 30
set -g status-left         "\
   "
set -g status-right        "\
#(bash which mpc > /dev/null && \
  mpc | grep playing > /dev/null && \
  mpc current -f 'now playing %%artist%% - #####[fg=colour96#]%%title%%#####[default#]') \
#(date '+%Y%m%d #[fg=colour89]%H%M#[default]') \
"
# basic options
set-option -g prefix C-f
set-option -sg escape-time 0
# set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ',xterm*:Tc'
set-option -g default-shell /bin/zsh

# ========
# keybinds
# ========

setw -g mode-keys vi
# send prefix to child tmux
# bind-key -n C-f send-prefix

# reload config
bind-key -n M-r source-file ~/.tmux.conf \; \
           display-message "reloaded"

# detach
bind-key -n M-Q detach

# alt-NUM key as a switch workspace
set-option -g base-index 1
set-window-option -g pane-base-index 1
bind-key -n M-1 if-shell "tmux list-windows | grep ^1:" "select-window -t 1" "new-window -t 1 -n ●"
bind-key -n M-2 if-shell "tmux list-windows | grep ^2:" "select-window -t 2" "new-window -t 2 -n ●"
bind-key -n M-3 if-shell "tmux list-windows | grep ^3:" "select-window -t 3" "new-window -t 3 -n ●"
bind-key -n M-4 if-shell "tmux list-windows | grep ^4:" "select-window -t 4" "new-window -t 4 -n ●"
bind-key -n M-5 if-shell "tmux list-windows | grep ^5:" "select-window -t 5" "new-window -t 5 -n ●"
bind-key -n M-6 if-shell "tmux list-windows | grep ^6:" "select-window -t 6" "new-window -t 6 -n ●"
bind-key -n M-7 if-shell "tmux list-windows | grep ^7:" "select-window -t 7" "new-window -t 7 -n ●"
bind-key -n M-8 if-shell "tmux list-windows | grep ^8:" "select-window -t 8" "new-window -t 8 -n ●"
# alt-shift-NUM key as a move pane to workspace
bind-key -n "M-!" join-pane -t :1 \; last-window
bind-key -n "M-@" join-pane -t :2 \; last-window
bind-key -n "M-#" join-pane -t :3 \; last-window
bind-key -n "M-\$" join-pane -t :4 \; last-window
bind-key -n "M-%" join-pane -t :5 \; last-window
bind-key -n "M-^" join-pane -t :6 \; last-window
bind-key -n "M-&" join-pane -t :7 \; last-window
bind-key -n "M-*" join-pane -t :8 \; last-window
# initialize workspace
set-hook -g session-created "rename-window -t 1  ●  \; new-window -t 2 -n ●  \; last-window\; new-window -t 3 -n ●  \; last-window\; new-window -t 4 -n ●  \; last-window\; new-window -t 5 -n ●  \; last-window\; new-window -t 6 -n ●  \; last-window\; new-window -t 7 -n ●  \; last-window\; new-window -t 8 -n ●  \; last-window"

# disable new window creation
unbind-key "!"
unbind-key "\""
unbind-key "c"
unbind-key "'"
unbind-key "("
unbind-key ")"
unbind-key ","
unbind-key "-"
unbind-key "."
