function prompt_color {
    if [ "$1" = "reset" ]
    then
        echo '%{\e[m%}'
    else
        # generate color code
        local code=-1
        local style=38
        if [ "$1" = "bg" ]
        then
            (( style = 48 ))
        fi
        (( rv = $(printf '%d\n' 0x$(echo $2 | cut -b 2,3)) ))
        (( gv = $(printf '%d\n' 0x$(echo $2 | cut -b 4,5)) ))
        (( bv = $(printf '%d\n' 0x$(echo $2 | cut -b 6,7)) ))
        echo '%{\e['"${style}"';2;'"${rv}"';'"${gv}"';'"${bv}"'m%}'
    fi
}

prompt_arrow="❱ "
prompt_red=$(prompt_color fg '#e27878')
prompt_green=$(prompt_color fg '#89b8c2')
prompt_yellow=$(prompt_color fg '#e2a478')
prompt_gray=$(prompt_color fg '#aaaaaa')
prompt_reset=$(prompt_color reset)

PROMPT2=". "
RPROMPT='${PROMPT_VCS_INFO} ${PROMPT_KUBE_INFO}'
SPROMPT='${prompt_red}%{$suggest%}%B%r%b [y, n, a, e] > ${prompt_reset}'

autoload -Uz add-zsh-hook
add-zsh-hook precmd prompt_vcs_info
function prompt_vcs_info() {
    if git status > /dev/null 2> /dev/null; then
        local VCS_TEXT="git"
        local VCS_REPO_TEXT=$(git config --get remote.origin.url)
        local VCS_BRANCH_TEXT=$(git rev-parse --abbrev-ref HEAD)
    fi
    if [ "${VCS_TEXT}" = "" ]; then
    else
        case "${VCS_BRANCH_TEXT}" in
            main|master)
                PROMPT_VCS_INFO="${prompt_gray}${VCS_REPO_TEXT} ${prompt_yellow}${VCS_BRANCH_TEXT}${prompt_reset}"
            ;;
            *)
                PROMPT_VCS_INFO="${prompt_gray}${VCS_REPO_TEXT} ${prompt_green}${VCS_BRANCH_TEXT}${prompt_reset}"
            ;;
        esac
    fi
}

add-zsh-hook precmd prompt_kube_info
function prompt_kube_info() {
    local context ns
    if context=$(kubectl config current-context 2>/dev/null); then
        ns=$(kubectl config view -o "jsonpath={.contexts[?(@.name==\"$context\")].context.namespace}")
        [[ -z "$ns" ]] && ns="(default)"
        PROMPT_KUBE_INFO="${prompt_green}${context}:${ns}${prompt_reset}"
    else
        PROMPT_KUBE_INFO=""
    fi
}

function zle-line-init zle-keymap-select {
    case $KEYMAP in
        vicmd)
            PROMPT="${prompt_yellow}${prompt_arrow}${prompt_reset}"
        ;;
        visual|main)
            PROMPT="${prompt_green}${prompt_arrow}${prompt_reset}"
        ;;
        *)
            PROMPT="${prompt_red}${prompt_arrow}${prompt_reset}"
        ;;
    esac
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select
